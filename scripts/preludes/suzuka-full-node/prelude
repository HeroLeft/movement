#!/usr/bin/env bash
set -e

. ./scripts/suzuka/suzuka-env

# export CELESTIA_LOG_LEVEL=debug

export MOVE_ROCKS_CHAIN_ID="$(openssl rand -hex 10)"
export MOVE_ROCKS_PATH="$MOVEMENT_BASE_STORAGE_PATH/move-rocks/${MOVE_ROCKS_CHAIN_ID}/.move-rocks"
. ./scripts/celestia/celestia-env

: ${MOVEMENT_PREBUILT:=false}
export MOVEMENT_PREBUILT
: ${CARGO_PROFILE:=debug}
export CARGO_PROFILE

if [ "$CARGO_PROFILE" = "release" ]; then
    CARGO_PROFILE_FLAGS="--release"
else
    CARGO_PROFILE_FLAGS=""
fi

if [ "$MOVEMENT_PREBUILT" != "true" ]; then

    # Build movement components
    echo "Building suzuka-config..."
    cargo build $CARGO_PROFILE_FLAGS --bin suzuka-config
    echo "Built suzuka-config!"

    echo "Building m1-da-light-node..."
    cargo build $CARGO_PROFILE_FLAGS -p m1-da-light-node --features "sequencer"
    echo "Built m1-da-light-node!"

    echo "Building suzuka-full-node..."
    cargo build $CARGO_PROFILE_FLAGS -p suzuka-full-node --features "logging"
    echo "Built suzuka-full-node!"

    # Build aptos components
    WORKING_DIR=$(pwd)
    temp_dir=$MOVEMENT_BASE_STORAGE_PATH/monza-aptos
    cp -R "$MONZA_APTOS_PATH" "$temp_dir"
    chmod -R 755 $temp_dir
    cd $MOVEMENT_BASE_STORAGE_PATH/monza-aptos
    echo "Building aptos-faucet-service..."
    cargo build $CARGO_PROFILE_FLAGS -p aptos-faucet-service
    echo "Built aptos-faucet-service!"
    cd $WORKING_DIR

else
    echo "MOVEMENT_PREBUILT is set, skipping build."
fi

eval $(./target/$CARGO_PROFILE/suzuka-config)
